// Package config TODO
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
package config

const (
	// RATIS getRemotePort使用
	RATIS = "RATIS"
	// STANDALONE getRemotePort使用
	STANDALONE = "STANDALONE"

	// DFS_CONTAINER_RATIS_IPC_PORT TODO
	DFS_CONTAINER_RATIS_IPC_PORT = "dfs.container.ratis.ipc"
	// DFS_CONTAINER_RATIS_IPC_PORT_DEFAULT TODO
	DFS_CONTAINER_RATIS_IPC_PORT_DEFAULT = 9858

	// OZONE_OM_RATIS_ENABLE_KEY TODO
	OZONE_OM_RATIS_ENABLE_KEY = "ozone.om.ratis.enable"
	// OZONE_OM_SERVICE_IDS_KEY TODO
	OZONE_OM_SERVICE_IDS_KEY = "ozone.om.service.ids" // service id 和node id组成address key
	// OZONE_OM_NODES_KEY TODO
	OZONE_OM_NODES_KEY = "ozone.om.nodes"
	// OZONE_OM_ADDRESS_KEY TODO
	OZONE_OM_ADDRESS_KEY = "ozone.om.address" // ozone.om.address.serviceid.nodeid

	// OZONE_VERIFY_CHECKSUM_KEY TODO
	OZONE_VERIFY_CHECKSUM_KEY = "ozone.verify.checksum"
	// OZONE_VERIFY_CHECKSUM_DEFAULT TODO
	OZONE_VERIFY_CHECKSUM_DEFAULT = true

	// OZONE_REPLICATION_TYPE_KEY TODO
	OZONE_REPLICATION_TYPE_KEY = "ozone.replication.type"
	// OZONE_REPLICATION_TYPE_DEFAULT TODO
	OZONE_REPLICATION_TYPE_DEFAULT = "ratis"
	// OZONE_REPLICATION_KEY TODO
	OZONE_REPLICATION_KEY = "ozone.replication"
	// OZONE_REPLICATION_DEFAULT TODO
	OZONE_REPLICATION_DEFAULT = 3

	// OZONE_SCM_BLOCK_SIZE TODO
	OZONE_SCM_BLOCK_SIZE = "ozone.scm.block.size"
	// OZONE_SCM_BLOCK_SIZE_DEFAULT TODO
	OZONE_SCM_BLOCK_SIZE_DEFAULT = "256MB"
	// OZONE_SCM_CHUNK_SIZE TODO
	OZONE_SCM_CHUNK_SIZE = "ozone.scm.chunk.size"
	// OZONE_SCM_CHUNK_SIZE_DEFAULT TODO
	OZONE_SCM_CHUNK_SIZE_DEFAULT = "4MB"

	// OZONE_CLIENT_BLOCK_STREAMBFS_SIZE TODO
	OZONE_CLIENT_BLOCK_STREAMBFS_SIZE = "ozone.client.block.streamBufferFlushSize"
	// OZONE_CLIENT_BLOCK_STREAMBFS_SIZE_DEFAULT TODO
	OZONE_CLIENT_BLOCK_STREAMBFS_SIZE_DEFAULT = "16MB"
	// OZONE_CLIENT_BLOCK_STREAMBMS_SIZE TODO
	OZONE_CLIENT_BLOCK_STREAMBMS_SIZE = "ozone.client.block.streamBufferMaxSize"
	// OZONE_CLIENT_BLOCK_STREAMBMS_SIZE_DEFAULT TODO
	OZONE_CLIENT_BLOCK_STREAMBMS_SIZE_DEFAULT = "4MB"

	// OZONE_CLIENT_BYTES_PER_CHECKSUM TODO
	OZONE_CLIENT_BYTES_PER_CHECKSUM = "ozone.client.bytes.per.checksum"
	// OZONE_CLIENT_BYTES_PER_CHECKSUM_DEFAULT TODO
	OZONE_CLIENT_BYTES_PER_CHECKSUM_DEFAULT = "1MB"
	// OZONE_CLIENT_VERIFY_CHECKSUM TODO
	OZONE_CLIENT_VERIFY_CHECKSUM = "ozone.client.verify.checksum"
	// OZONE_CLIENT_VERIFY_CHECKSUM_DEFAULT TODO
	OZONE_CLIENT_VERIFY_CHECKSUM_DEFAULT = true
	// OZONE_CLIENT_CHECKSUM_TYPE TODO
	OZONE_CLIENT_CHECKSUM_TYPE = "ozone.client.checksum.type"
	// OZONE_CLIENT_CHECKSUM_TYPE_DEFAULT TODO
	OZONE_CLIENT_CHECKSUM_TYPE_DEFAULT = "CRC32"

	// OZONE_CLIENT_LIST_CACHE_SIZE TODO
	OZONE_CLIENT_LIST_CACHE_SIZE = "ozone.client.list.cache"
	// OZONE_CLIENT_LIST_CACHE_SIZE_DEFAULT TODO
	OZONE_CLIENT_LIST_CACHE_SIZE_DEFAULT = 1000
	// OZONE_CLIENT_FAILOVER_MAX_ATTEMPTS_KEY TODO
	OZONE_CLIENT_FAILOVER_MAX_ATTEMPTS_KEY = "ozone.client.failover.max.attempts"
	// OZONE_CLIENT_FAILOVER_MAX_ATTEMPTS_DEFAULT TODO
	OZONE_CLIENT_FAILOVER_MAX_ATTEMPTS_DEFAULT = 500
	// OZONE_CLIENT_WAIT_BETWEEN_RETRIES_MILLIS_KEY TODO
	OZONE_CLIENT_WAIT_BETWEEN_RETRIES_MILLIS_KEY = "ozone.client.wait.between.retries.millis"
	// OZONE_CLIENT_WAIT_BETWEEN_RETRIES_MILLIS_DEFAULT TODO
	OZONE_CLIENT_WAIT_BETWEEN_RETRIES_MILLIS_DEFAULT = 2000
	// OZONE_CLIENT_READ_TIMEOUT_KEY TODO
	OZONE_CLIENT_READ_TIMEOUT_KEY = "ozone.client.read.timeout"
	// OZONE_CLIENT_READ_TIMEOUT_DEFAULT TODO
	OZONE_CLIENT_READ_TIMEOUT_DEFAULT = "30s"
	// OZONE_CHUNK_READ_BUFFER_DEFAULT_SIZE_KEY TODO
	OZONE_CHUNK_READ_BUFFER_DEFAULT_SIZE_KEY = "ozone.chunk.read.buffer.default.size"
	// OZONE_CLIENT_CONNECTION_TIMEOUT_KEY TODO
	OZONE_CLIENT_CONNECTION_TIMEOUT_KEY = "ozone.client.connection.timeout"
	// OZONE_CLIENT_CONNECTION_TIMEOUT_DEFAULT TODO
	OZONE_CLIENT_CONNECTION_TIMEOUT_DEFAULT = "5000ms"
	// OZONE_CLIENT_SOCKET_TIMEOUT_KEY TODO
	OZONE_CLIENT_SOCKET_TIMEOUT_KEY = "ozone.client.socket.timeout"
	// OZONE_CLIENT_SOCKET_TIMEOUT_DEFAULT TODO
	OZONE_CLIENT_SOCKET_TIMEOUT_DEFAULT = "5000ms"

	// OZONE_NETWORK_TOPOLOGY_AWARE_READ_KEY TODO
	OZONE_NETWORK_TOPOLOGY_AWARE_READ_KEY = "ozone.network.topology.aware.read"
	// OZONE_NETWORK_TOPOLOGY_AWARE_READ_DEFAULT TODO
	OZONE_NETWORK_TOPOLOGY_AWARE_READ_DEFAULT = false
)
